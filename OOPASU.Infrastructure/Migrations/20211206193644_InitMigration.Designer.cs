// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OOPASU.Infrastructure.Data;

namespace OOPASU.Infrastructure.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20211206193644_InitMigration")]
    partial class InitMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OOPASU.Domain.Author", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IntellegentWorkId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SecondName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IntellegentWorkId");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("OOPASU.Domain.EducationalProgram", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BookId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EdProgramName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.ToTable("EducationalPrograms");
                });

            modelBuilder.Entity("OOPASU.Domain.Indexation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IntellegentWorkId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IntellegentWorkId");

                    b.ToTable("Indexations");
                });

            modelBuilder.Entity("OOPASU.Domain.IntellegentWork", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DOI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GRNTI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Place")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("IntellegentWorks");
                });

            modelBuilder.Entity("OOPASU.Domain.KeyWord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IntellegentWorkId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Word")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IntellegentWorkId");

                    b.ToTable("KeyWords");
                });

            modelBuilder.Entity("OOPASU.Domain.Publication", b =>
                {
                    b.HasBaseType("OOPASU.Domain.IntellegentWork");

                    b.Property<string>("Editor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PageNumber")
                        .HasColumnType("int");

                    b.Property<string>("Publisher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UDK")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Publications");
                });

            modelBuilder.Entity("OOPASU.Domain.RegistrationSertificate", b =>
                {
                    b.HasBaseType("OOPASU.Domain.IntellegentWork");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RightHolder")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("RegistrationSertificates");
                });

            modelBuilder.Entity("OOPASU.Domain.Article", b =>
                {
                    b.HasBaseType("OOPASU.Domain.Publication");

                    b.Property<string>("CollectionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CollectionNumber")
                        .HasColumnType("int");

                    b.Property<int>("CollectionPart")
                        .HasColumnType("int");

                    b.Property<int>("FirstPage")
                        .HasColumnType("int");

                    b.Property<int>("LastPage")
                        .HasColumnType("int");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("OOPASU.Domain.Book", b =>
                {
                    b.HasBaseType("OOPASU.Domain.Publication");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Organisation")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("OOPASU.Domain.Author", b =>
                {
                    b.HasOne("OOPASU.Domain.IntellegentWork", "IntellegentWork")
                        .WithMany("Authors")
                        .HasForeignKey("IntellegentWorkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IntellegentWork");
                });

            modelBuilder.Entity("OOPASU.Domain.EducationalProgram", b =>
                {
                    b.HasOne("OOPASU.Domain.Book", "Books")
                        .WithMany("EducationalPrograms")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Books");
                });

            modelBuilder.Entity("OOPASU.Domain.Indexation", b =>
                {
                    b.HasOne("OOPASU.Domain.IntellegentWork", "IntellegentWork")
                        .WithMany("Indexations")
                        .HasForeignKey("IntellegentWorkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IntellegentWork");
                });

            modelBuilder.Entity("OOPASU.Domain.KeyWord", b =>
                {
                    b.HasOne("OOPASU.Domain.IntellegentWork", "IntellegentWork")
                        .WithMany("KeyWords")
                        .HasForeignKey("IntellegentWorkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IntellegentWork");
                });

            modelBuilder.Entity("OOPASU.Domain.Publication", b =>
                {
                    b.HasOne("OOPASU.Domain.IntellegentWork", null)
                        .WithOne()
                        .HasForeignKey("OOPASU.Domain.Publication", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OOPASU.Domain.RegistrationSertificate", b =>
                {
                    b.HasOne("OOPASU.Domain.IntellegentWork", null)
                        .WithOne()
                        .HasForeignKey("OOPASU.Domain.RegistrationSertificate", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OOPASU.Domain.Article", b =>
                {
                    b.HasOne("OOPASU.Domain.Publication", null)
                        .WithOne()
                        .HasForeignKey("OOPASU.Domain.Article", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OOPASU.Domain.Book", b =>
                {
                    b.HasOne("OOPASU.Domain.Publication", null)
                        .WithOne()
                        .HasForeignKey("OOPASU.Domain.Book", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OOPASU.Domain.IntellegentWork", b =>
                {
                    b.Navigation("Authors");

                    b.Navigation("Indexations");

                    b.Navigation("KeyWords");
                });

            modelBuilder.Entity("OOPASU.Domain.Book", b =>
                {
                    b.Navigation("EducationalPrograms");
                });
#pragma warning restore 612, 618
        }
    }
}
